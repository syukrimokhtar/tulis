{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","form","padding","content","fontSize","margin","width","height","overflow","color","backgroundColor","border","fontFamily","outline","boxShadow","resize","fontWeight","float","position","bottom","right","borderRadius","textAlign","App","classes","React","useState","value","setValue","className","onChange","event","target","defaultValue","href","onClick","e","Array","from","document","querySelectorAll","forEach","input","style","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kNAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,IAEXC,QAAS,CACPC,SAAS,GACTF,QAAS,EACTG,OAAQ,EACRC,MAAO,OACPC,OAAQ,OACRC,SAAS,SACTC,MAAO,UACPC,gBAAiB,UACjBC,OAAQ,OACRC,WAAY,SACZC,QAAS,OACTC,UAAW,OACXC,OAAQ,OACRC,WAAY,QAEdC,MAAO,CACLC,SAAS,QACTZ,MAAM,OACNC,OAAO,OACPY,OAAO,OACPC,MAAO,OACPV,gBAAiB,UACjBD,MAAO,OACPY,aAAc,OACdC,UAAW,cA8BAC,MAxBf,WACE,IAAMC,EAAU1B,IADH,EAEa2B,IAAMC,SAAS,IAF5B,mBAENC,EAFM,KAECC,EAFD,KAYb,OACE,gCACE,sBAAMC,UAAWL,EAAQvB,KAAzB,SACE,0BAAU6B,SANK,SAACC,GACpBH,EAASG,EAAMC,OAAOL,QAKgBM,aAAcN,EAAOE,UAAWL,EAAQrB,YAE9E,mBAAG+B,KAAK,IAAIL,UAAWL,EAAQP,MAAOkB,QAdpB,SAACC,GACnBC,MAAMC,KAAKC,SAASC,iBAAiB,aAAaC,SAChD,SAAAC,GAAK,OAAKA,EAAMf,MAAQ,MAE1BC,EAAS,KAUT,SACE,mBAAGC,UAAU,oBAAoBc,MAAO,CAACC,UAAU,gBC7C1CC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,SAG1BZ,M","file":"static/js/main.3c590b20.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport './App.css';\n/*\n    styles\n*/\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    padding: 10\n  },\n  content: {\n    fontSize:60,\n    padding: 0,\n    margin: 0,\n    width: '90vw',\n    height: '95vh',\n    overflow:\"hidden\",\n    color: \"#F2F3F4\",\n    backgroundColor: \"#2C3E50\",\n    border: \"none\",\n    fontFamily: \"Roboto\",\n    outline: \"none\",\n    boxShadow: \"none\",\n    resize: \"none\",\n    fontWeight: \"bold\"\n  },\n  float: {\n    position:\"fixed\",\n    width:\"60px\",\n    height:\"60px\",\n    bottom:\"50px\",\n    right: \"50px\",\n    backgroundColor: \"#D4AC0D\",\n    color: \"#000\",\n    borderRadius: \"50px\",\n    textAlign: \"center\"\n  }\n  \n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('');\n  const handleClear = (e: any) => {\n    Array.from(document.querySelectorAll(\"textarea\")).forEach(\n      input => (input.value = \"\")\n    );\n    setValue(\"\");\n  };\n  const handleChange = (event: any) => {\n    setValue(event.target.value);\n  };\n  return (\n    <div>\n      <form className={classes.form}>\n        <textarea onChange={handleChange} defaultValue={value} className={classes.content}></textarea>\n      </form>\n    <a href=\"#\" className={classes.float} onClick={handleClear}>\n      <i className=\"fa fa-trash fa-2x\" style={{marginTop:\"12px\"}}></i>\n    </a>\n  </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}